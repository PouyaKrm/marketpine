# Generated by Django 2.2 on 2020-10-11 10:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0029_customer_is_phone_confirmed'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessmanGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_date', models.DateTimeField(auto_now=True, null=True)),
                ('title', models.CharField(max_length=40)),
                ('type', models.CharField(choices=[('0', 'NORMAL'), ('1', 'TOP_PURCHASE')], default='0', max_length=2)),
                ('businessman', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'businessman_groups',
            },
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_date', models.DateTimeField(auto_now=True, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_query_name='membership', to='users.Customer')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_query_name='membership', to='groups.BusinessmanGroups')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='businessmangroups',
            name='customers',
            field=models.ManyToManyField(related_name='connected_groups', related_query_name='connected_groups', through='groups.Membership', to='users.Customer'),
        ),
    ]
